
DED_BUILD_DIRS := \
	$(BUILD_DIR).mkdir \
	$(filter $(MAKECMDGOALS),clean) \
	$(BUILD_DIR).mkdir/ded/ \


DED_FILES    := $(wildcard $(ENGINE_SOURCE)/botlib/*.c) \
	$(wildcard $(ENGINE_SOURCE)/qcommon/*.c) \
	$(wildcard $(ENGINE_SOURCE)/server/*.c) \
	$(filter-out %/sys_snd.c,$(wildcard $(ENGINE_SOURCE)/wasm/*.c))
DED_OBJS     := $(addprefix $(BUILD_DIR)/ded/,$(notdir $(DED_FILES:.c=.o)))

morph.ded.wasm: $(DED_BUILD_DIRS) $(DED_FILES) $(DED_OBJS)
	$(call DO_ENGINE_LD,$@,$(DED_OBJS))

morph.ded.opt: morph.ded.wasm $(BUILD_DIR)/morph.ded.wasm
	$(call DO_ENGINE_OPT,$(BUILD_DIR)/morph.ded.opt,$(BUILD_DIR)/morph.ded.wasm)

# OKAY THIS IS BASICALLY THE PART THAT COULD BENEFIT IF MAKEFILE RAN IN THE BROWSER
# TODO: I COULD COMPRESS ALL THE CODE FILES IN WINDOW.PREFS, MAKE INDEX.HTML ON 
#   LOAD JUST LIKE BUSYBOX SELF EXTRACTING IMAGE. THEN WHEN I MAKE THE SYS_WORKER.JS
#   I CAN USE A BLOB, OR CREATE SOME GENERIC IDBFS WORKER FOR BOTH SERVICE WORKER AND
#   BACKGROUND WORKER THAT JUST LOADS WHATEVER LATEST .WASM DOWNLOADED FILE.

WORKER_FILES  := $(wildcard driver/eval/*.js)              \
	$(filter-out %/backend-plugin.js,$(wildcard driver/repl/backend*.js)) \
	driver/utils/acorn.js driver/utils/acorn-loose.js        \
	driver/utils/crypt.js driver/utils/jsencrypt.js          \
	$(BUILD_DIR)/jsdom.min.js driver/utils/remarkable.min.js \
	$(BUILD_DIR)/morph.ded.js 

$(BUILD_DIR)/sys_worker.js: dedicated $(WORKER_FILES) 
	$(Q)cat $(WORKER_FILES) > $@
	node -e "require('./engine/wasm/bin/make').formatForVFS( \
		'$(BUILD_DIR)/morph.ded.wasm', 'morph.wasm' )" >> $@

$(BUILD_DIR)/morph.ded.js: $(BUILD_DIR)/morph.ded.wasm
	@:

# TODO: move this to service_worker.js, lol, stupid chrome debugger
dedicated: morph.ded.wasm morph.ded.opt # q3map2.wasm for MemoryMaps
	@: 

$(BUILD_DIR)/ded/%.o: $(ENGINE_SOURCE)/botlib/%.c
	$(echo_cmd) "BOTLIB_CC $<"
	$(Q)$(CC) -o $@ -DDEDICATED=1 -DBOTLIB=1 $(ENGINE_CFLAGS) -c $<

$(BUILD_DIR)/ded/%.o: $(ENGINE_SOURCE)/qcommon/%.c
	$(echo_cmd) "COMMON_CC $<"
	$(Q)$(CC) -o $@ -DDEDICATED=1 $(ENGINE_CFLAGS) -c $<

$(BUILD_DIR)/ded/%.o: $(ENGINE_SOURCE)/server/%.c
	$(echo_cmd) "SERVER_CC $<"
	$(Q)$(CC) -o $@ -DDEDICATED=1 $(ENGINE_CFLAGS) -c $<

$(BUILD_DIR)/ded/%.o: $(ENGINE_SOURCE)/wasm/%.c
	$(echo_cmd) "WASM_CC $<"
	$(Q)$(CC) -o $@ -DDEDICATED=1 $(ENGINE_CFLAGS) -c $<


